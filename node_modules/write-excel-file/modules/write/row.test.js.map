{"version":3,"sources":["../../source/write/row.test.js"],"names":["generateRow","SharedStrings","describe","it","sharedStrings","expect","value","type","String","Number","getSharedString","string","to","equal"],"mappings":"AAAA;AACA;AAEA,OAAOA,WAAP,MAAwB,OAAxB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEAC,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,QAAMC,aAAa,GAAG,IAAIH,aAAJ,EAAtB;AACAI,IAAAA,MAAM,CAACL,WAAW,CAChB,CACE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAEC;AAAvB,KADF,EAEE;AAAEF,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,IAAI,EAAEE;AAArB,KAFF,CADgB,EAKhB,CALgB,EAMhB;AACEC,MAAAA,eADF,2BACkBC,MADlB,EAC0B;AACtB,eAAO,CAAP;AACD;AAHH,KANgB,CAAZ,CAAN,CAWGC,EAXH,CAWMC,KAXN,EAYE;AACD,4EAbD;AAeD,GAjBC,CAAF;AAkBD,CAnBO,CAAR","sourcesContent":["// Copy-pasted from:\r\n// https://github.com/davidramos-om/zipcelx-on-steroids/blob/master/__test__/formatters/rows/formatRows.spec.js\r\n\r\nimport generateRow from './row'\r\n\r\nimport SharedStrings from './sharedStrings'\r\n\r\ndescribe('generateRow()', () => {\r\n  it('Should create one row from given data', () => {\r\n    const sharedStrings = new SharedStrings()\r\n    expect(generateRow(\r\n      [\r\n        { value: 'Test', type: String },\r\n        { value: 1000, type: Number }\r\n      ],\r\n      0,\r\n      {\r\n        getSharedString(string) {\r\n          return 0\r\n        }\r\n      }\r\n    )).to.equal(\r\n      // '<row r=\"1\"><c r=\"A1\" t=\"inlineStr\"><is><t>Test</t></is></c><c r=\"B1\"><v>1000</v></c></row>'\r\n    \t'<row r=\"1\"><c r=\"A1\" t=\"s\"><v>0</v></c><c r=\"B1\"><v>1000</v></c></row>'\r\n    )\r\n  })\r\n})"],"file":"row.test.js"}