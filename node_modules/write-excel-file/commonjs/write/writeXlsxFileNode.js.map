{"version":3,"sources":["../../source/write/writeXlsxFileNode.js"],"names":["writeXlsxFile","data","filePath","sheetNames","sheets","schema","columns","headerStyle","fontFamily","fontSize","dateFormat","archive","Archive","getSharedStringsXml","getStylesXml","createTempDirectory","root","createDirectory","path","join","xl","_rels","worksheetsPath","promises","writeFile","id","push","Promise","all","directory","append","rels","contentTypes","write","removeDirectory","contents","resolve","reject","fs","error","mkdir","mkdtemp","os","tmpdir","directoryPath","rmdir","recursive"],"mappings":"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","sourcesContent":["import fs from 'fs'\r\nimport path from 'path'\r\nimport os from 'os'\r\n\r\nimport Archive from './archive'\r\n\r\nimport generateWorkbookXml from './statics/workbook.xml'\r\nimport generateWorkbookXmlRels from './statics/workbook.xml.rels'\r\nimport rels from './statics/rels'\r\nimport contentTypes from './statics/[Content_Types].xml'\r\n\r\nimport { generateSheets } from './writeXlsxFile.common'\r\n\r\nexport default async function writeXlsxFile(data, {\r\n\tfilePath,\r\n\tsheets: sheetNames,\r\n\tschema,\r\n\tcolumns,\r\n\theaderStyle,\r\n\tfontFamily,\r\n\tfontSize,\r\n\tdateFormat\r\n} = {}) {\r\n\tconst archive = new Archive(filePath)\r\n\r\n\tconst {\r\n\t\tsheets,\r\n\t\tgetSharedStringsXml,\r\n\t\tgetStylesXml\r\n\t} = generateSheets({\r\n\t\tdata,\r\n\t\tsheetNames,\r\n\t\tschema,\r\n\t\tcolumns,\r\n\t\theaderStyle,\r\n\t\tfontFamily,\r\n\t\tfontSize,\r\n\t\tdateFormat\r\n\t})\r\n\r\n\t// There doesn't seem to be a way to just append a file into a subdirectory\r\n\t// in `archiver` library, hence using a hacky temporary directory workaround.\r\n\t// https://www.npmjs.com/package/archiver\r\n\tconst root = await createTempDirectory()\r\n\tconst xl = await createDirectory(path.join(root, 'xl'))\r\n\tconst _rels = await createDirectory(path.join(xl, '_rels'))\r\n\tconst worksheetsPath = await createDirectory(path.join(xl, 'worksheets'))\r\n\r\n\tconst promises = [\r\n\t\twriteFile(path.join(_rels, 'workbook.xml.rels'), generateWorkbookXmlRels({ sheets })),\r\n\t\twriteFile(path.join(xl, 'workbook.xml'), generateWorkbookXml({ sheets })),\r\n\t\twriteFile(path.join(xl, 'styles.xml'), getStylesXml()),\r\n\t\twriteFile(path.join(xl, 'sharedStrings.xml'), getSharedStringsXml())\r\n\t]\r\n\r\n\tfor (const { id, data } of sheets) {\r\n\t\tpromises.push(writeFile(path.join(worksheetsPath, `sheet${id}.xml`), data))\r\n\t}\r\n\r\n\tawait Promise.all(promises)\r\n\r\n\tarchive.directory(xl, 'xl')\r\n\tarchive.append(rels, '_rels/.rels')\r\n\tarchive.append(contentTypes, '[Content_Types].xml')\r\n\r\n\tif (filePath) {\r\n\t\tawait archive.write()\r\n\t\tawait removeDirectory(root)\r\n\t} else {\r\n\t\treturn archive.write()\r\n\t}\r\n}\r\n\r\nfunction writeFile(path, contents) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.writeFile(path, contents, 'utf-8', (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve()\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction createDirectory(path) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.mkdir(path, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve(path)\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction createTempDirectory() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.mkdtemp(path.join(os.tmpdir(), 'write-excel-file-'), (error, directoryPath) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve(directoryPath)\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction removeDirectory(path) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.rmdir(path, { recursive: true }, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve(path)\r\n\t\t})\r\n\t})\r\n}"],"file":"writeXlsxFileNode.js"}