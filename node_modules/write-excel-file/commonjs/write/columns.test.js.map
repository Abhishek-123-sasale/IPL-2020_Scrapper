{"version":3,"sources":["../../source/write/columns.test.js"],"names":["describe","it","expect","schema","value","type","String","width","Number","to","equal"],"mappings":";;AAAA;;;;AAEAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAClCC,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9CC,IAAAA,MAAM,CAAC,yBAA2B;AAChCC,MAAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,MADA;AAEPC,QAAAA,IAAI,EAAEC,MAFC;AAGPC,QAAAA,KAAK,EAAE;AAHA,OAAD,EAIL;AACDH,QAAAA,KAAK,EAAE,IADN;AAEDC,QAAAA,IAAI,EAAEG,MAFL;AAGDD,QAAAA,KAAK,EAAE;AAHN,OAJK;AADwB,KAA3B,CAAD,CAAN,CAUIE,EAVJ,CAUOC,KAVP,CAWC,iHAXD;AAaD,GAdC,CAAF;AAeD,CAhBO,CAAR","sourcesContent":["import generateColumnsDescription from './columns'\r\n\r\ndescribe('generateColumns()', () => {\r\n  it('should generate columns description', () => {\r\n    expect(generateColumnsDescription({\r\n      schema: [{\r\n        value: 'Test',\r\n        type: String,\r\n        width: 25\r\n      }, {\r\n        value: 1000,\r\n        type: Number,\r\n        width: 10\r\n      }]\r\n    })).to.equal(\r\n    \t'<cols><col min=\"1\" max=\"1\" width=\"25\" customWidth=\"1\"/><col min=\"2\" max=\"2\" width=\"10\" customWidth=\"1\"/></cols>'\r\n    )\r\n  })\r\n})"],"file":"columns.test.js"}